phptelemeter v1.22 - Copyright (c) 2005 - 2006 by Jan De Luyck

What is it?
~~~~~~~~~~~
- phptelemeter is a script that can read the webpages for the
  webbased 'quota' monitor made available by ISP's.
  These pages can contain both the actual status, and the status since
  the last 'reset', which happens on a date set by the ISP. This
  is what makes up the used quota.

What can it do?
~~~~~~~~~~~~~~~
- This script was designed from the ground up to be usable both
  by humans and by machines. The output code can be in human-readable
  format, in a no-nonsense script parsable format (CSV) or in HTML format.

Which ISP's are supported?
~~~~~~~~~~~~~~~~~~~~~~~~~~
--------------------------------------------------------------
| ISP     | Parser            | Reset Date | Quota | History |
--------------------------------------------------------------
| Telenet | telemeter_web     |      X     |   X   |    X    |
|         | telemeter4tools   |      X     |   X   |    X    |
| Dommel  | dommel_web        |      X     |   X   |         |
| Skynet  | skynet_web        |      X     |   X   |         |
| Scarlet | scarlet_web       |      X     |   X   |    X    |
--------------------------------------------------------------

Requirements
~~~~~~~~~~~~
- It requires PHP >= 4.3.0 and < 5.0, and the PHP4 CURL extension, compiled
  with SSL support!
- For Telemeter4Tools it requires the nusoap SOAP library, and the xmlparser
  XML library. Both are included in the package.

Howto
~~~~~
- First off, to actually run this script you must tell it where the
  php binary is. Edit phptelemeter.php and modify the first line
  to #!/path/to/php4 -q. On Debian Sid, this is /usr/bin/php4.

- To create the initial configuration file, just run the script.
  It will notice the absence of ~/.phptelemeterrc, and create a
  dummy version. Next, configure this file (usually you'll just
  want to change username and password to the information for
  your account), and rerun phptelemeter - you'll get the output
  you want instantly.

- Alternatively, you can also run phptelemeter with --new-config, which
  will create a new dummy config file in your current directory.

Command line options
~~~~~~~~~~~~~~~~~~~~
- There are several options (you can view them with --help):
  * -c, --check-version - checks the version online **
  * -d, --daily - show the 30day overview **
  * -D, --debug - shows some debugging stuff **
  * -f, --file-output - sets the output to file mode instead of screen (stdout) **
  * -g, --graph - show the usage graph **
  * -h, --help - show help message
  * -n, --new-config - generates a new dummy config file on the spot
  * -r, --remaining - show the remaining quota **
  * -V, --version - shows the version and exits
  * -z, --resetdate - shows the reset date **

(Options market with '**' override the configuration file)

- Notes on commandline use:
  * When --debug is used, --file-output is automatically disabled.

Notes on the version check
~~~~~~~~~~~~~~~~~~~~~~~~~~
- For all you paranoid people: the only thing phptelemeter does is load an
  URL when it's started. The url is:
  http://www.kcore.org/software/phptelemeter/VERSION
  which contains nothing but a version number, of the latest upstream version.

- If you set check_version=false, it won't bother doing that and as such won't
  do anything.

Configuration file location
~~~~~~~~~~~~~~~~~~~~~~~~~~~
- The configuration file is searched in two locations, in the following order
  (whichever is found first is used)
  * /etc/phptelemeterrc (or %WINDIR/phptelemeterrc)
  * ~/.phptelemeterrc (or %PROFILEDIR/.phptelemeterrc)
- If no configuration file is found, the script will try to create a dummy in
  ~/.phptelemeterrc.

Configuration file layout
~~~~~~~~~~~~~~~~~~~~~~~~~
[general]
show_daily=true						# Show 30-day stats (true/false)
show_remaining=true					# Show how much you have remaining (true/false)
show_graph=true						# Show the transfer graph (true/false)
show_resetdate=false				# Shows the reset-date for your telemeter.

file_output=false					# Sets if file output should be used instead of screen (stdout)
file_prefix=/tmp/phptelemeter_		# The path prefix to use for the output files
file_extension=txt					# The extension to use for the output files

check_version=false					# Check the current version against the latest upstream version,
									# and report if there's a new version available.

publisher=plaintext					# The publisher module to use. Currently plaintext, machine and
									#  html are included.
modulepath=/path/to/phptelemeter	# The path to where the modules directory is. Optional.

[proxy]
proxy_host=							# Hostname of the proxy. Leave blank to disable
proxy_port=8080						# port of the proxy
proxy_auth=false					# set to true to enable proxy authentication
proxy_username=						# Proxy username
proxy_password=						# Proxy password

[account-1]
username=youruser					# The username of account-1
password=yourpassword				# The password of account-1
description=your description		# Description of account-1, if it is set it'll be used instead
									#  of the account name in the output
parser=a parser						# The parsing module to use for account-1. Currently
									#  telemeter4tools, telemeter_web, dommel_web, skynet_web and
									#  scarlet_web are included.

...

[account-9]
username=youruser					# The username of account-9
password=yourpassword				# The password of account-9
description=your description		# Description of account-9
parser=a parser						# Parser of account-9

Running on a webserver
~~~~~~~~~~~~~~~~~~~~~~
- Should you want to run phptelemeter from a webserver, you have to create
  the configuration file with the --new-config parameter, and put it in the
  /etc directory. Don't forget to set the publisher to html.

- Furthermore, you should remove the first line from the phptelemeter.php file,
  because otherwise you'll see it in the webpage output.

Running on windows
~~~~~~~~~~~~~~~~~~
- This script has _not_ been tested on windows. In version 1.10 I implemented specific support
  for the windows platform, and I guess it _should_ work. Since I haven't tested this,
  I cannot guarantee it wil run. Should you run it, and it works, please let me know.
  If it doesn't, feel free to file any and all bugs.

Where to get it
~~~~~~~~~~~~~~~
- There's only one place: http://www.sf.net/projects/phptelemeter/.

Known issues
~~~~~~~~~~~~
- dommel_web parser:
  * it will only take the first ADSL account it finds in your "My Packages" page.

Credits
~~~~~~~
- The PHP team for creating php ;p
- The CURL team for creating curl, which made my job easy
- Robbie (creator of pytelemeter), for the hints on how to output the data.
- My friends for just being there ;p
- Haploc:
   * for the idea on multiple-account support
   * access to Dommel.com meter data for testing
- Telenet, for creating the Telemeter4Tools
- NuSphere corporation for nusoap (http://dietrich.ganx4.com/nusoap/index.php)
- Eric Pollman for his XML Library (http://eric.pollmann.net/work/public_domain/)
- Cajmere on be.comp.os.linux for a valid point about not finding the modules
  when it's installed systemwide
- YvesDM on be.comp.os.linux for:
   * the hint of output publishers and account descriptions.
   * some serious help in bugfixing with 'Turbo' accounts
- Gh0sty for testing the scarlet parser and helping me to fix the few bugs in it

Bugs
~~~~
- What? Bugs? Nooo... can't be. I'm infallible. Or smthing. ;p
  Just file them with the Bugtracker on the Sourceforge page, at
  http://sourceforge.net/tracker/?group_id=149435&atid=774600

New features
~~~~~~~~~~~~
- Got a great idea? File it with feature requests at Sourceforge.
  http://sourceforge.net/tracker/?group_id=149435&atid=774603
