phptelemeter v1.32 - Copyright (c) 2005 - 2007 by Jan De Luyck

What is it?
~~~~~~~~~~~
- phptelemeter is a script that can read the webpages for the
  webbased 'quota' monitor made available by ISP's.
  These pages can contain both the actual status, and the status since
  the last 'reset', which happens on a date set by the ISP. This
  is what makes up the used quota.

What can it do?
~~~~~~~~~~~~~~~
- This script was designed from the ground up to be usable both
  by humans and by machines. The output code can be in human-readable
  format, in a no-nonsense script parsable format (CSV) or in HTML format.
- It can also send a warning-email every time phptelemeter is run to
  notify that a certain percentage has been crossed.

Which ISP's are supported?
~~~~~~~~~~~~~~~~~~~~~~~~~~
--------------------------------------------------------------
| ISP     | Parser            | Reset Date | Quota | History |
--------------------------------------------------------------
| Telenet | telemeter_web     |      X     |   X   |    X    |
|         | telemeter4tools   |      X     |   X   |    X    |
| Dommel  | dommel_web        |      X     |   X   |         |
| Skynet  | skynet_web        |      X     |   X   |         |
| Scarlet | scarlet_web       |      X     |   X   |    X    |
| UPC CZ  | upccz_web         |      X     |   X   |         |
--------------------------------------------------------------

Requirements
~~~~~~~~~~~~
- It requires PHP >= 4.3.0 and the PHP CURL extension, compiled
  with SSL support!
- For Telemeter4Tools it requires the nusoap SOAP library, and the xmlparser
  XML library. Both are included in the package. Do _not_ update the nusoap
  library because it has been patched to work with phptelemeter.

Howto
~~~~~
- First off, to actually run this script you must tell it where the
  php binary is. Edit phptelemeter.php and modify the first line
  to #!/path/to/php -q. On Debian Sid, this is /usr/bin/php4 (or php5).

- To create the initial configuration file, just run the script.
  It will notice the absence of ~/.phptelemeterrc, and create a
  dummy version. Next, configure this file (usually you'll just
  want to change username and password to the information for
  your account), and rerun phptelemeter - you'll get the output
  you want instantly.

- Alternatively, you can also run phptelemeter with --new-config, which
  will create a new dummy config file in your current directory.

Command line options
~~~~~~~~~~~~~~~~~~~~
- There are several options (you can view them with --help):
  * -c, --check-version - checks the version online **
  * -d, --daily - show the 30day overview **
  * -D, --debug - shows some debugging stuff **
  * -e, --encrypt <password> - encrypts (obfuscates) the password given on the
                               command line. Put this value then in the config
                               file.
  * -f, --file-output - sets the output to file mode instead of screen
                        (stdout) **
  * -g, --graph - show the usage graph **
  * -h, --help - show help message
  * -i, --ignore-errors - ignores any runtime errors and tries to continue **
  * -n, --new-config - generates a new dummy config file on the spot
  * -r, --remaining - show the remaining quota **
  * -V, --version - shows the version and exits
  * -x, --decrypt <password> - decrypts the password given on the command line
  * -z, --resetdate - shows the reset date **

(Options market with '**' override the configuration file)

- Notes on commandline use:
  * When --debug is used, --file-output is automatically disabled.

Notes on the version check
~~~~~~~~~~~~~~~~~~~~~~~~~~
- For all you paranoid people: the only thing phptelemeter does is load an
  URL when it's started. The url is:
  http://www.kcore.org/software/phptelemeter/VERSION
  which contains nothing but a version number, of the latest upstream version.

- If you set check_version=false, it won't bother doing that and as such won't
  do anything.

Configuration file location
~~~~~~~~~~~~~~~~~~~~~~~~~~~
- The configuration file is searched in two locations, in the following order
  (whichever is found first is used)
  * /etc/phptelemeterrc (or %WINDIR/phptelemeterrc)
  * ~/.phptelemeterrc (or %PROFILEDIR/.phptelemeterrc)
- If no configuration file is found, the script will try to create a dummy in
  ~/.phptelemeterrc.

Configuration file layout
~~~~~~~~~~~~~~~~~~~~~~~~~
[general]
show_daily=true				# Show 30-day stats (true/false)
show_remaining=true			# Show how much you have remaining
					# (true/false)
show_graph=true				# Show the transfer graph (true/false)
show_resetdate=false			# Shows the reset-date for your meter.

file_output=false			# Sets if file output should be used
					# instead of screen (stdout)
file_prefix=/tmp/phptelemeter_		# The path prefix to use for the
					# output files
file_extension=txt			# The extension to use for the output
					# files

check_version=false			# Check the current version against
					# the latest upstream version, and
					# report if there's a new version
					# available.

publisher=plaintext			# The publisher module to use.
					# Currently plaintext, machine,
					# plaintext_graphonly, no_output and
					# html are included.
modulepath=/path/to/phptelemeter	# The path to where the modules
					# directory is. Optional.

ignore_errors=false			# Ignore any runtime errors that might
					# occur.
email=your email			# What email address to use as From:
					# when sending warning mails
encrypt_passwords=false			# Encrypted passwords in the config

[proxy]
proxy_host=				# Hostname of the proxy. Leave blank
					# to disable
proxy_port=8080				# port of the proxy
proxy_auth=false			# set to true to enable proxy
					# authentication
proxy_username=				# Proxy username
proxy_password=				# Proxy password

[account-1]
username=youruser			# The username of account-1
password=yourpassword			# The password of account-1
description=your description		# Description of account-1, if it is
					# set it'll be used instead of the
					# account name in the output
parser=a parser				# The parsing module to use for
					# account-1. Currently telemeter4tools,
					# telemeter_web, dommel_web, skynet_web,
					# scarlet_web and upccz_web are
					# included.
warn_percentage=percentage		# Percentage when a warning email
					# should be sent to the warn_email
					# email address. Set percentage to 0
					# to disable it.
warn_email=email address
...

[account-99]
username=youruser			# The username of account-99
password=yourpassword			# The password of account-99
description=your description		# Description of account-99
parser=a parser				# Parser of account-99
warn_percentage=percentage		# Warning percentage of account-99
warn_email=email address		# Warning email address of account-99

Include files
~~~~~~~~~~~~~
- Starting version 1.31, phptelemeter supports using include files in the main
  configuration file. This allows you to easily split up the configuration
  in logical chunks.
- To use this, you have to insert into phptelemeterrc an
  [include /path/to/file]
  statement. phptelemeter will read this file and insert it at the location
  where it was in the original file.
- Recursive [include] statements are _not_ supported! (so don't use [include]
  inside an [included] file!)

Running on a webserver
~~~~~~~~~~~~~~~~~~~~~~
- Should you want to run phptelemeter from a webserver, you have to create
  the configuration file with the --new-config parameter, and put it in the
  /etc directory. Don't forget to set the publisher to html.

- Furthermore, you should remove the first line from the phptelemeter.php file,
  because otherwise you'll see it in the webpage output.

Running on windows
~~~~~~~~~~~~~~~~~~
- This script has only preliminary been tested on windows. In version 1.10
  I implemented specific support for the windows platform, and I guess it
  _should_ work. Should you run it, and it works, please let me know.
  If it doesn't, feel free to file any and all bugs.

Where to get it
~~~~~~~~~~~~~~~
- There's only one place: http://phptelemeter.kcore.org/

Known issues
~~~~~~~~~~~~
- dommel_web parser:
  * it will only take the first ADSL account it finds in your "My Packages"
    page.

- upccz_web, scarlet parsers:
  * I have no accounts with these ISP's. If it breaks, please tell me so I can
    investigate.

- password encryption:
  * The encryption used in phptelemeter is easily reversable, as the key
    is embedded in the code. Do not rely on this as your only way of
    protecting your login credentials!
  * To change the key, modify the _key value at the top of
    phptelemeter.inc.php.

Extending phptelemeter
~~~~~~~~~~~~~~~~~~~~~~
- Extending phptelemeter is fairly easy. If you want to write a new parser,
  take a look at the existing parser_web_ files in the modules directory.
- For publishers, look at the publisher_ files.
- For ease of use, I've included two 'simulating' parsers: 
  parser_simulator_single, which simulates a single-quota ISP, and
  parser_simulator_separate, which simulates a separate-quota ISP. Both are
  written with very little checks, so sometimes the output is a bit strange.
  Just re-run, and you should get more usable data ;)

Credits
~~~~~~~
- The PHP team for creating php ;p
- The CURL team for creating curl, which made my job easy
- Robbie (creator of pytelemeter), for the hints on how to output the data.
- My friends for just being there ;p
- Haploc:
   * for the idea on multiple-account support
   * access to Dommel.com meter data for testing
   * for the idea on the ignore_errors parameter
- Telenet, for creating the Telemeter4Tools
- NuSphere corporation for nusoap (http://dietrich.ganx4.com/nusoap/index.php)
- Eric Pollman for his XML Library
  (http://eric.pollmann.net/work/public_domain/)
- Cajmere on be.comp.os.linux for a valid point about not finding the modules
  when it's installed systemwide
- YvesDM on be.comp.os.linux for:
   * the hint of output publishers and account descriptions.
   * some serious help in bugfixing with 'Turbo' accounts
   * The idea for warn-emails
- Gh0sty for testing the scarlet parser

Bugs
~~~~
- What? Bugs? Nooo... can't be. I'm infallible. Or smthing. ;p
  Just file them with the Bugtracker on the Sourceforge page, at
  http://sourceforge.net/tracker/?group_id=149435&atid=774600

New features
~~~~~~~~~~~~
- Got a great idea? File it with feature requests at Sourceforge.
  http://sourceforge.net/tracker/?group_id=149435&atid=774603
